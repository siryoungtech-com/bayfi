server:
  port: 8080

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:postgres}:${DATABASE_PORT:5432}/${DATABASE_NAME:bayfi_db_local}
    username: ${DATABASE_USER:postgres}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: ${JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
  cache:
    type: redis
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${BASE_URI}/api/v1/auth/oauth2/callback/google
            scope: openid, email, profile
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
            redirect-uri: ${BASE_URI}/api/v1/auth/oauth2/callback/facebook
            scope: email, public_profile
  docker:
    compose:
      enabled: true

jwt:
  expiration: ${JWT_EXPIRATION:20000}

ngrok:
  enabled: ${NGROK_ENABLED:true}
  auth-token: ${NGROK_AUTHTOKEN}
  command: "http --url=${BASE_URI} 8080"

logging:
  file:
    name: logger.log
  level:
    root: ${LOGGING_LEVEL_ROOT:info}

management:
  endpoints:
    web:
      exposure:
        include: health,info

tatum:
  api:
    key: ${TATUM_API_KEY}
  kms:
    path: ${TATUM_KMS_PATH:/kms-data/wallet.dat}
    password: ${TATUM_KMS_PASSWORD}